"""
Django settings for pyadselfservice project.

Generated by 'django-admin startproject' using Django 1.10.1.

For more information on this file, see
https://docs.djangoproject.com/en/1.10/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.10/ref/settings/
"""

__author__ = "Amith Nayak (iAMAmazing)"
__copyright__ = "Copyright 2016, iAMAmazing"
__credits__ = ["Amith Nayak (iAMAmazing)"]
__license__ = "GPL"
__version__ = "3"
__maintainer__ = "Amith Nayak (iAMAmazing)"
__email__ = "kanayak123@yahoo.co.in"
__status__ = "Production"
#Refer to my blogs http://blogger.iAMAmazing.in/


import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.10/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'Your really long secret key'

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = False
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'validateuser',
    'nocaptcha_recaptcha',
    'zxcvbn_password',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pyadselfservice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pyadselfservice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.10/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.10/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.10/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Kolkata'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.10/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = "/opt/django-pyadselfservice/static/"

#Your Google recaptcha codes. Please refer to https://developers.google.com/recaptcha/intro
#Your 'Site key' goes here
RECAPTCHA_PUBLIC_KEY = 'Site key here'
#Your 'Secret key' goes here
RECAPTCHA_PRIVATE_KEY = 'Secret key here'
RECAPTCHA_USE_SSL=True

#Home page if the OTP validation fails
OTP_LOGIN_URL='/'

#Your SMTP Relay server details for OTP trigger
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_HOST_USER = 'urID@gmail.com'
EMAIL_HOST_PASSWORD = 'Your Password'
EMAIL_PORT = 587
DEFAULT_FROM_EMAIL="(Sender) Sender Name <urID@gmail.com>"

#Settings for pyadselfservice
#
#IP or FQDN of your domain controller
PYADSELFSERVICE_DCFQDN='dc1.example.local'

#FQDN of your Domain/Forest
PYADSELFSERVICE_DOMAINFQDN='example.local'

#Credentials with at least "Read all properties", "Reset password", "Read/Write lockoutTime" permissions on AD, Please refer to "Section 2" of my blog http://blogger.iamamazing.in/2016/10/web-based-python3-password-reset-tool.html
PYADSELFSERVICE_USERNAME='prevuser@example.local'
PYADSELFSERVICE_PASS='prevuser password'

#Base DN of the domain
PYADSELFSERVICE_BASEDN='DC=example,DC=local'

#This attribute must NOT be changed. You need this to trigger OTP email.
PYADSELFSERVICE_ATTR2 = 'mail'

#Please cerate this path or change it to wherever you want to store the logs. Ensure to change the owner of the folder to web server user account like www-data
PYADSELFSERVICE_LOGPATH='/var/log/pyadselfservice/'

#Session time-out in seconds. This is for mainteaining the integrity of each password reset sessions. DONOT include quotes.
PYADSELFSERVICE_STOUT='900'

# Key for encryption/decryption of the parameters. The key must be either 16, 24, or 32 bytes long
PYADSELFSERVICE_CRYPTKEY='1234567890123456'

#The other attributes that you want to validate against
PYADSELFSERVICE_ATTR3 = 'postalCode'
PYADSELFSERVICE_ATTR4 = 'department'
PYADSELFSERVICE_ATTR5 = 'mobile'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'standard': {
            'format': '%(asctime)s %(levelname)s %(module)s %(process)d %(thread)d %(funcName)s %(message)s'
        },
    },
    'handlers': {
        'ldap_logs': {
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'filename': PYADSELFSERVICE_LOGPATH+'/debug.log',
            'formatter':'standard',
        },
        'http_logs': {
            'level':'DEBUG',
            'class':'logging.FileHandler',
            'filename': PYADSELFSERVICE_LOGPATH+'/django_request.log',
            'formatter':'standard',
        },
    },
    'loggers': {
        '': {
            'handlers': ['ldap_logs'],
            'level': 'DEBUG',
            'propagate': True
        },
        'django.request': {
            'handlers': ['http_logs'],
            'level': 'DEBUG',
            'propagate': False
        },
    }
}

PASSWORD_MIN_LENGTH = 8
PASSWORD_MIN_ENTROPY = 5
